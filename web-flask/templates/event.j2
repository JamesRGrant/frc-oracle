<!doctype html>
<html>
<head>
    <title>frc-oracle: {{title}}</title>
    <link rel="stylesheet" href="{{ url_for('static', filename='frc-oracle.css') }}">
    <link rel="shortcut icon" href="{{ url_for('static', filename='favicon.ico') }}">
</head>

<body>
    <script>
        async function clear_data() {
            // Get the current URL, which has the match ID at the end
            var url_parts = window.location.href.split('//')[1].split('/');
            var match_id = url_parts[url_parts.length - 1];
            var base_url = "http://" + url_parts[0].replace("5000", "5001");
            base_url = base_url.replace("8000", "5001");

            // Remove the predictions by reloading this event
            url = base_url + '/api/events/' + match_id;
            try {
                r = await fetch(url, {method: 'PUT'});      
            } catch (e) {
                console.log(e);
            }

            location.reload();
        }

        async function replayOne() {
            // Get the current URL, which has the match ID at the end
            var url_parts = window.location.href.split('//')[1].split('/');
            var match_id = url_parts[url_parts.length - 1];
            var base_url = "http://" + url_parts[0].replace("5000", "5001");
            base_url = base_url.replace("8000", "5001");

            // Trigger the replay
            url = base_url + '/api/events/' + match_id + '/replayone';
            await fetch(url, {method: 'POST'});

            // Refresh the page
            await new Promise(r => setTimeout(r, 3000));
            location.reload();
        }

        async function replayMatch() {
            // Get the current URL, which has the match ID at the end
            var url_parts = window.location.href.split('//')[1].split('/');
            var match_id = url_parts[url_parts.length - 1];
            var base_url = "http://" + url_parts[0].replace("5000", "5001");
            base_url = base_url.replace("8000", "5001");

            // Trigger the replay
            url = base_url + '/api/events/' + match_id + '/replay';
            await fetch(url, {method: 'POST'});

            // Refresh the page
            await new Promise(r => setTimeout(r, 2000));
            location.reload();
        }
    </script>

    <center>
    <a href="{{ url_for('index') }}">frc-oracle</a><br>
    <h1>{{ title }}</h1>
    <input id="clear" type="button" value="Clear" onclick="clear_data()" />
    <input id="all" type="button" value="Replay All" onclick="replayMatch()" />

    <table>
        <tr><td>Final Guess Accuracy:</td><td>{{ final_guess_accuracy }}</td></tr>
        <tr><td>All Guesses Accuracy:</td><td>{{ all_guesses_accuracy }}</td></tr>
    </table>

    <table>
    <tr><th>Match</th><th>R1</th><th>R2</th><th>R3</th><th>B1</th><th>B2</th><th>B3</th><th>Predicted</th><th>Actual</th></tr>
    {% for id in matches %}
    <tr>
        {% set match = matches[id] %}
        <td align="left">{{ match['name'] }}</td>
        <td bgcolor="lightcoral">{{ match['teams']['red'][0] }}</td>
        <td bgcolor="lightcoral">{{ match['teams']['red'][1] }}</td>
        <td bgcolor="lightcoral">{{ match['teams']['red'][2] }}</td>
        <td bgcolor="lightblue">{{ match['teams']['blue'][0] }}</td>
        <td bgcolor="lightblue">{{ match['teams']['blue'][1]}}</td>
        <td bgcolor="lightblue">{{ match['teams']['blue'][2] }}</td>
        {% set color = '' %}
        {% set pred_count = '' %}
        {% if match.predictions %}
            {% set pred_count = 'n = ' + match['predictions'][0]['red']['win']|length|string() %}
            {% if match['predictions'][0]['red']['win'][-1] == 1 %}
                {% set color = 'lightcoral' %}
            {% elif match['predictions'][0]['blue']['win'][-1] == 1 %}
                {% set color = 'lightblue' %}
            {% endif %} 
        {% endif %}
        <td bgcolor="{{color}}">{{pred_count}}</td>
        {% set color = '' %}
        {% set text = '' %}
        {% if match.results %}
            {% if match['results']['red']['win'] == 1 %}
                {% set color = 'lightcoral' %}
                {% set text = '<b>' + match['results']['red']['score']|string() + '</B> - ' + match['results']['blue']['score']|string() %}
            {% elif match['results']['blue']['win'] == 1 %}
                {% set color = 'lightblue' %}
                {% set text = match['results']['red']['score']|string() + ' - <b>' + match['results']['blue']['score']|string() + '</b>' %}
            {% else %}
                {% set text = match['results']['red']['score']|string() + ' - ' + match['results']['blue']['score']|string() %}
                {% set color = '#E0B0FF' %}
            {% endif %} 
        {% endif %} 
        <td bgcolor="{{color}}">{{text}}</td>
    </tr>
    {% endfor %}
    </table>
    </center>
</body>
</html>